kubectl exec $POD -n postgres -- psql -c 'drop database pxdemo'

kubectl exec $POD -n postgres -- psql -l

kubectl exec $POD -n postgres -- psql pxdemo -c 'select count(*) from pgbench_accounts'

pxctl credentials create --provider=s3 --s3-disable-ssl --s3-region=us-east-1 --s3-access-key=minio --s3-secret-key=minio123 --s3-endpoint=$(kubectl get node -o jsonpath='{.items[0].status.addresses[0].address}'):30221 minio

pxctl credentials list

pxctl credentials validate minio

pxctl cloudsnap status

storkctl get volumesnapshots -n postgres

kubectl get pod -l app=postgres -n backup-lab

kubectl exec $POD -n backup-lab -- createdb pxdemo

kubectl exec $POD -n backup-lab -- pgbench -i -s 50 pxdemo

kubectl exec $POD -n backup-lab -- psql pxdemo -c 'select count(*) from pgbench_accounts'

kubectl get backuplocation -n backup-lab

storkctl get backuplocation -n backup-lab

storkctl get applicationbackups -n backup-lab

storkctl get applicationrestores -n backup-lab

storkctl create clusterpair remotecluster \
--namespace kube-system \
--dest-kube-file $HOME/training/kubeconfig.target \
--src-kube-file $HOME/.kube/config \
--provider s3 \
--s3-endpoint $(kubectl get node -o jsonpath='{.items[0].status.addresses[0].address}'):30221 \
--s3-access-key minio --s3-secret-key minio123 --s3-region dummy \
--disable-ssl --mode migration --unidirectional

kubectl exec $POD -n testns -- redis-cli --no-auth-warning -a password SET foo bar

kubectl exec $POD -n testns -- redis-cli --no-auth-warning -a password GET foo

kubectl exec $POD -n testns -- redis-cli --no-auth-warning -a password SAVE

storkctl get migrations -n kube-system
