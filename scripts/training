if [ $cluster -eq 1 ]; then
  sh /assets/training/Disaster_Recovery/etcd.sh
  mkdir /etc/skel/.kube
  mv /assets/training /etc/skel
  cat <<EOF >>/etc/skel/.bashrc
alias k=kubectl
complete -F __start_kubectl k
PS1='\e[0;33m[\u@px-training \W]\$ \e[m'
EOF
  for i in $(seq 1 $clusters); do
    useradd training$i
    passwd --stdin training$i <<<portworx
    chmod 755 /home/training$i
  done
fi

while :; do
  echo trying to copy kubeconfig
  cat /root/.kube/config | ssh master-1 "su -l training$cluster -c 'cat >.kube/config' && exit 22"
  [ $? -eq 22 ] && break
  sleep 2
done

for i in $(seq 1 $nodes); do
  while :; do
    ssh node-$cluster-$i "useradd training$cluster && passwd --stdin training$cluster <<<portworx && exit 22"
    [ $? -eq 22 ] && break
    sleep 2
  done
done

