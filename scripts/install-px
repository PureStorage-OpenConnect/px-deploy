# Install Portworx
# If you want to use clouddrives, set the environment variable cloud_drive="type%3Dgp2%2Csize%3D150"
# otherwise existing drives will be used
# To use a journal, set the environment variable journal=auto or journal=/dev/sdb
# If you want to deploy using the operator, set the environment variable operator=true
# otherwise the DaemonSet will be used
k8s_version=$(kubectl version --short | awk -Fv '/Server Version: / {print $3}')
url="https://install.portworx.com/$px_version?kbver=$k8s_version&b=true&c=px-deploy-$cluster&stork=true&st=k8s&lh=true"
[ -e /usr/bin/oc ] && url="$url&osft=true"
if [ "$cloud_drive" ]; then
  if [ "$cloud" = "aws" ]; then
    key=$(grep aws_access_key_id /root/.aws/credentials | cut -f 3 -d " " | sed 's/+/%2B/g')
    secret=$(grep aws_secret_access_key /root/.aws/credentials | cut -f 3 -d " " | sed 's/+/%2B/g')
    url="$url&e=AWS_ACCESS_KEY_ID%3D$key%2CAWS_SECRET_ACCESS_KEY%3D$secret"
    url="$url&s=%22$cloud_drive%22&kd=$cloud_drive"
  fi
fi
if [ "$journal" ]; then
  url="$url&j=$journal"
fi
[ "$px_suffix" ] && url="$url&$px_suffix"

if [ "$operator" = true ]; then
  [ -e /sbin/azure-repo-svc ] && kubectl taint node --all node-role.kubernetes.io/master-
  curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.15.1/install.sh | bash -s 0.15.1
  kubectl create -f https://operatorhub.io/install/portworx.yaml
  while ! kubectl get csv -n operators | grep -q Succeeded ; do
    sleep 2
  done
  url="$url&operator=true"
  [ -e /sbin/azure-repo-svc ] && kubectl taint node --all node-role.kubernetes.io/master=:NoSchedule
fi

curl -so /tmp/px.yml $url
kubectl apply -f /tmp/px.yml

curl -L https://github.com/portworx/pxc/releases/download/v0.30.0/pxc-v0.30.0.linux.amd64.tar.gz | tar xvz -C /tmp/.
mv /tmp/pxc/kubectl-pxc /usr/bin/.

# Install storkctl
until (kubectl get po -n kube-system -l name=stork  | awk '{print $3}' | grep Running); do echo "Waiting for stork pod";sleep 1; done
storkpods=($(kubectl get po -n kube-system -l name=stork  | grep "Running" | awk '{print $1}' ))
kubectl cp -n kube-system ${storkpods[0]}:/storkctl/linux/storkctl ./storkctl
sudo mv storkctl /usr/local/bin &&
sudo chmod +x /usr/local/bin/storkctl